            - name: Verilog Compiler
  # You may pin to the exact commit or the version.
  # uses: jge162/verilog_compiler@5e8574b12e35d931a8ff195fe624772468052453
  uses: jge162/verilog_compiler@1.0.0
  with:
    # Token used to access the repository.
    repo-token: 
    # Path to the configuration file.
    configuration-path: 
    # Whether to sync the labels.
    sync-labels: # optional, default is true
    # Repository name with owner. For example, jge62/Action-workflows@v1.0.1
    repository: # optional, default is ${{ github.repository }}
    # The branch, tag or SHA to checkout. When checking out the repository that triggered a workflow, this defaults to the reference or SHA for that event.  Otherwise, uses the default branch.

    ref: # optional
    # Personal access token (PAT) used to fetch the repository. The PAT is configured with the local git config, which enables your scripts to run authenticated git commands. The post-job step removes the PAT. We recommend using a service account with the least permissions necessary. Also when generating a new PAT, select the least scopes necessary. [Learn more about creating and using encrypted secrets](https://help.github.com/en/actions/automating-your-workflow-with-github-actions/creating-and-using-encrypted-secrets)

    token: # optional, default is ${{ github.token }}
    # SSH key used to fetch the repository. The SSH key is configured with the local git config, which enables your scripts to run authenticated git commands. The post-job step removes the SSH key. We recommend using a service account with the least permissions necessary. [Learn more about creating and using encrypted secrets](https://help.github.com/en/actions/automating-your-workflow-with-github-actions/creating-and-using-encrypted-secrets)

    ssh-key: # optional
    # Known hosts in addition to the user and global host key database. The public SSH keys for a host may be obtained using the utility `ssh-keyscan`. For example, `ssh-keyscan github.com`. The public key for github.com is always implicitly added.

    ssh-known-hosts: # optional
    # Whether to perform strict host key checking. When true, adds the options `StrictHostKeyChecking=yes` and `CheckHostIP=no` to the SSH command line. Use the input `ssh-known-hosts` to configure additional hosts.

    ssh-strict: # optional, default is true
    # Whether to configure the token or SSH key with the local git config
    persist-credentials: # optional, default is true
    # Relative path under $GITHUB_WORKSPACE to place the repository
    path: # optional
    # Whether to execute `git clean -ffdx && git reset --hard HEAD` before fetching
    clean: # optional, default is true
    # Number of commits to fetch. 0 indicates all history for all branches and tags.
    fetch-depth: # optional, default is 1
    # Whether to download Git-LFS files
    lfs: # optional, default is true
    # Whether to checkout submodules: `true` to checkout submodules or `recursive` to recursively checkout submodules. When the `ssh-key` input is not provided, SSH URLs beginning with `git@github.com:` are converted to HTTPS.

    submodules: # optional, default is true
    # Add repository path as safe.directory for Git global config by running `git config --global --add safe.directory <path>`
    set-safe-directory: # optional, default is true
    # The base URL for the GitHub instance that you are trying to clone from, will use environment defaults to fetch from the same instance that the workflow is running from unless specified. Example URLs are https://github.com or https://my-ghes-server.example.com
    github-server-url: 
          
